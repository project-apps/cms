{
  "_from": "directory-tree",
  "_id": "directory-tree@2.2.4",
  "_inBundle": false,
  "_integrity": "sha512-2N43msQptKbi3WMfIs+U09yi6bfyKL+MWyj5VMj8t1F/Tx04bt1cn/EEIU3o1JBltlJk7NQnzOEuTNa/KQvbWA==",
  "_location": "/directory-tree",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "directory-tree",
    "fetchSpec": "latest",
    "name": "directory-tree",
    "raw": "directory-tree",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/directory-tree/-/directory-tree-2.2.4.tgz",
  "_shasum": "6d5bd7d82e48378e256a1e87b678a43c50076e2e",
  "_spec": "directory-tree",
  "_where": "C:\\Users\\Admin\\repo\\project-apps\\cms",
  "author": {
    "name": "Mihnea Dobrescu-Balaur"
  },
  "bugs": {
    "url": "https://github.com/mihneadb/node-directory-tree/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "Convert a directory tree to a JS object.",
  "devDependencies": {
    "chai": "^2.3.0",
    "mocha": "^5.2.0"
  },
  "engines": {
    "node": ">=4.2"
  },
  "homepage": "https://github.com/mihneadb/node-directory-tree",
  "keywords": [
    "directory",
    "tree"
  ],
  "license": "MIT",
  "main": "lib/directory-tree.js",
  "name": "directory-tree",
  "optionalDependencies": {},
  "readme": "[![Build Status](https://travis-ci.org/mihneadb/node-directory-tree.svg)](https://travis-ci.org/mihneadb/node-directory-tree)\n\n# directory-tree\n\nCreates a JavaScript object representing a directory tree.\n\n## Install\n\n```bash\n$ npm install directory-tree\n```\n\n## Usage\n\n```js\nconst dirTree = require(\"directory-tree\");\nconst tree = dirTree(\"/some/path\");\n```\n\nAnd you can also filter by an extensions regex:\nThis is useful for including only certain types of files.\n\n```js\nconst dirTree = require(\"directory-tree\");\nconst filteredTree = dirTree(\"/some/path\", { extensions: /\\.txt/ });\n```\n\nExample for filtering multiple extensions with Regex.\n\n```js\nconst dirTree = require(\"directory-tree\");\nconst filteredTree = dirTree(\"/some/path\", {\n  extensions: /\\.(md|js|html|java|py|rb)$/\n});\n```\n\nYou can also exclude paths from the tree using a regex:\n\n```js\nconst dirTree = require(\"directory-tree\");\nconst filteredTree = dirTree(\"/some/path\", { exclude: /some_path_to_exclude/ });\n```\n\nYou can also specify which additional attributes you would like to be included about each file/directory:\n\n```js\nconst dirTree = require('directory-tree');\nconst filteredTree = dirTree('/some/path', {attributes:['mode', 'mtime']});\n```\n\nThe default attributes are `[name, size, extension, path]` for Files and `[name, size, path]` for Directories\n\nA callback function can be executed with each file that matches the extensions provided:\n\n```js\nconst PATH = require('path');\nconst dirTree = require('directory-tree');\n\nconst tree = dirTree('./test/test_data', {extensions:/\\.txt$/}, (item, PATH, stats) => {\n\tconsole.log(item);\n});\n```\n\nThe callback function takes the directory item (has path, name, size, and extension) and an instance of [node path](https://nodejs.org/api/path.html) and an instance of [node FS.stats](https://nodejs.org/api/fs.html#fs_class_fs_stats).\n\nYou can also pass a callback function for directories:\n```js\nconst PATH = require('path');\nconst dirTree = require('directory-tree');\n\nconst tree = dirTree('./test/test_data', {extensions:/\\.txt$/}, null, (item, PATH, stats) => {\n\tconsole.log(item);\n});\n```\n\n## Options\n\n`exclude` : `RegExp|RegExp[]` - A RegExp or an array of RegExp to test for exlusion of directories.\n\n`extensions` : `RegExp` - A RegExp to test for exclusion of files with the matching extension.\n\n`attributes` : `string[]` - Array of [FS.stats](https://nodejs.org/api/fs.html#fs_class_fs_stats) attributes.\n\n`normalizePath` : `Boolean` - If true, windows style paths will be normalized to unix style pathes (/ instead of \\\\).\n\n## Result\n\nGiven a directory structured like this:\n\n```\nphotos\n├── summer\n│   └── june\n│       └── windsurf.jpg\n└── winter\n    └── january\n        ├── ski.png\n        └── snowboard.jpg\n```\n\n`directory-tree` will return this JS object:\n\n```json\n{\n  \"path\": \"photos\",\n  \"name\": \"photos\",\n  \"size\": 600,\n  \"type\": \"directory\",\n  \"children\": [\n    {\n      \"path\": \"photos/summer\",\n      \"name\": \"summer\",\n      \"size\": 400,\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"photos/summer/june\",\n          \"name\": \"june\",\n          \"size\": 400,\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"photos/summer/june/windsurf.jpg\",\n              \"name\": \"windsurf.jpg\",\n              \"size\": 400,\n              \"type\": \"file\",\n              \"extension\": \".jpg\"\n            }\n          ]\n        }\n      ]\n    },\n    {\n      \"path\": \"photos/winter\",\n      \"name\": \"winter\",\n      \"size\": 200,\n      \"type\": \"directory\",\n      \"children\": [\n        {\n          \"path\": \"photos/winter/january\",\n          \"name\": \"january\",\n          \"size\": 200,\n          \"type\": \"directory\",\n          \"children\": [\n            {\n              \"path\": \"photos/winter/january/ski.png\",\n              \"name\": \"ski.png\",\n              \"size\": 100,\n              \"type\": \"file\",\n              \"extension\": \".png\"\n            },\n            {\n              \"path\": \"photos/winter/january/snowboard.jpg\",\n              \"name\": \"snowboard.jpg\",\n              \"size\": 100,\n              \"type\": \"file\",\n              \"extension\": \".jpg\"\n            }\n          ]\n        }\n      ]\n    }\n  ]\n}\n```\n\n## Note\n\nDevice, FIFO and socket files are ignored.\n\nFiles to which the user does not have permissions are included in the directory\ntree, however, directories to which the user does not have permissions, along\nwith all of its contained files, are completely ignored.\n\n## Dev\n\nTo run tests go the package root in your CLI and run,\n\n```bash\n$ npm test\n```\n\nMake sure you have the dev dependencies installed (e.g. `npm install .`)\n\n## Node version\n\nThis project requires at least Node v4.2.\nCheck out version `0.1.1` if you need support for older versions of Node.\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/mihneadb/node-directory-tree.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "2.2.4"
}
